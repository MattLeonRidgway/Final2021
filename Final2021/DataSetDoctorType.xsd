<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DataSetDoctorType" targetNamespace="http://tempuri.org/DataSetDoctorType.xsd" xmlns:mstns="http://tempuri.org/DataSetDoctorType.xsd" xmlns="http://tempuri.org/DataSetDoctorType.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="ConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="ConnectionString (Settings)" PropertyReference="ApplicationSettings.Final2021.Properties.Settings.GlobalReference.Default.ConnectionString" Provider="Devart.Data.SQLite" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DoctorTypeTableAdapter" GeneratorDataComponentClassName="DoctorTypeTableAdapter" Name="DoctorType" UserDataComponentName="DoctorTypeTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ConnectionString (Settings)" DbObjectName="&quot;main&quot;.DoctorType" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM "main"."DoctorType" WHERE (("TypeID" = :Original_TypeID) AND ("Type" = :Original_Type))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="Original_TypeID" Precision="0" ProviderType="Int64" Scale="0" Size="0" SourceColumn="TypeID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_Type" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="Type" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO "main"."DoctorType" ("TypeID", "Type") VALUES (:TypeID, :Type)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="TypeID" Precision="0" ProviderType="Int64" Scale="0" Size="0" SourceColumn="TypeID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Type" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="Type" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT TypeID, Type FROM "main".DoctorType</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE "main"."DoctorType" SET "TypeID" = :TypeID, "Type" = :Type WHERE (("TypeID" = :Original_TypeID) AND ("Type" = :Original_Type))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="TypeID" Precision="0" ProviderType="Int64" Scale="0" Size="0" SourceColumn="TypeID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Type" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="Type" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="Original_TypeID" Precision="0" ProviderType="Int64" Scale="0" Size="0" SourceColumn="TypeID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_Type" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="Type" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TypeID" DataSetColumn="TypeID" />
              <Mapping SourceColumn="Type" DataSetColumn="Type" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="ConnectionString (Settings)" DbObjectName="&quot;main&quot;.DoctorType" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="FillBy" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="FillBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT TypeID, Type FROM "main".DoctorType</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DataSetDoctorType" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="DataSetDoctorType" msprop:Generator_UserDSName="DataSetDoctorType">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="DoctorType" msprop:Generator_TableClassName="DoctorTypeDataTable" msprop:Generator_TableVarName="tableDoctorType" msprop:Generator_RowChangedName="DoctorTypeRowChanged" msprop:Generator_TablePropName="DoctorType" msprop:Generator_RowDeletingName="DoctorTypeRowDeleting" msprop:Generator_RowChangingName="DoctorTypeRowChanging" msprop:Generator_RowEvHandlerName="DoctorTypeRowChangeEventHandler" msprop:Generator_RowDeletedName="DoctorTypeRowDeleted" msprop:Generator_RowClassName="DoctorTypeRow" msprop:Generator_UserTableName="DoctorType" msprop:Generator_RowEvArgName="DoctorTypeRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TypeID" msprop:Generator_ColumnVarNameInTable="columnTypeID" msprop:Generator_ColumnPropNameInRow="TypeID" msprop:Generator_ColumnPropNameInTable="TypeIDColumn" msprop:Generator_UserColumnName="TypeID" type="xs:long" />
              <xs:element name="Type" msprop:Generator_ColumnVarNameInTable="columnType" msprop:Generator_ColumnPropNameInRow="Type" msprop:Generator_ColumnPropNameInTable="TypeColumn" msprop:Generator_UserColumnName="Type" type="xs:string" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:DoctorType" />
      <xs:field xpath="mstns:TypeID" />
    </xs:unique>
  </xs:element>
</xs:schema>